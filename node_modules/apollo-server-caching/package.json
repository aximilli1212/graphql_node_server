{
  "_args": [
    [
      "apollo-server-caching@0.4.0",
      "/home/aximilliesgarouth/code/node/vue_graph/node_modules/apollo-server-core"
    ]
  ],
  "_from": "apollo-server-caching@0.4.0",
  "_hasShrinkwrap": false,
  "_id": "apollo-server-caching@0.4.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/apollo-server-caching",
  "_nodeVersion": "8.15.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-server-caching_0.4.0_1557233019148_0.7255429978719539"
  },
  "_npmUser": {
    "email": "npm@apollographql.com",
    "name": "apollo-bot"
  },
  "_npmVersion": "lerna/3.13.4/node@v8.15.1+x64 (darwin)",
  "_phantomChildren": {
    "yallist": "3.0.3"
  },
  "_requested": {
    "name": "apollo-server-caching",
    "raw": "apollo-server-caching@0.4.0",
    "rawSpec": "0.4.0",
    "scope": null,
    "spec": "0.4.0",
    "type": "version"
  },
  "_requiredBy": [
    "/apollo-datasource",
    "/apollo-server-core"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-server-caching/-/apollo-server-caching-0.4.0.tgz",
  "_shasum": "e82917590d723c0adc1fa52900e79e93ad65e4d9",
  "_shrinkwrap": null,
  "_spec": "apollo-server-caching@0.4.0",
  "_where": "/home/aximilliesgarouth/code/node/vue_graph/node_modules/apollo-server-core",
  "author": {
    "name": "opensource@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-server/issues"
  },
  "dependencies": {
    "lru-cache": "^5.0.0"
  },
  "description": "[![npm version](https://badge.fury.io/js/apollo-server-caching.svg)](https://badge.fury.io/js/apollo-server-caching) [![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server)",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 27,
    "integrity": "sha512-GTOZdbLhrSOKYNWMYgaqX5cVNSMT0bGUTZKV8/tYlyYmsB6ey7l6iId3Q7UpHS6F6OR2lstz5XaKZ+T3fDfPzQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0X17CRA9TVsSAnZWagAATTkP/0QIYhH03qeJRvxwghPG\nhLM0yEM+wDWcEocolRLNSgtWHlKdayIWwW5DOjyZzMVMhj+MZcvTGQuIhde6\nslSdjfq2fP1CzfF1V9iqe7HcxW+j6Z2uXstV8U9AM6OE1kBDMrRcrZdH5dEE\nGtYwAqx4I61itB3ZCkuoaGHvYl5uFDlDJUqPIXS//e8zyRJ8uFPHj0JxYIxG\nlfbYPnEuq0ww1k7JRd1+ZjfZh9CszncuwEsdOtzMkEHTds/Z4ta2vVnQ+jxl\nU7icQFoL1likLmOpqagxrNTvcIHoh+5424D14TKnuoi8M5hHeGEI9zzpeM3y\nZ2QwY6bX4rb2BUY8kF3UD9Y+hkks9QfNeyfEOdOYKK2RijAAG0RO0YlZFZFZ\nqMF936vxO8zGGI7D70IZEv+wZRCkifylt99etYD9U93MjWpdttoArm3+S36c\nKkDxwGbkWVeb9EUscainqj/7HuBRkAvnPgQqdteEdml2R+GJOs9VKgF0LAYC\n99esy+BiNU93DBUH96bzQpk77m9XtWpaBpJ/sOBxXfAJquGS2M1KFNMlk4SO\n8+3SWqt1w8RuB6j5COQBx/6fbLVTMz23UW15TeMiyyfUVUWLHniAa4Fx2s6n\nE2RDG11sCKtvwUruJnP0sopBly8M3P9JeuJ1T44Eal2L8kX6BeX/MfjHB4XF\nNeBq\r\n=lUCq\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "e82917590d723c0adc1fa52900e79e93ad65e4d9",
    "tarball": "https://registry.npmjs.org/apollo-server-caching/-/apollo-server-caching-0.4.0.tgz",
    "unpackedSize": 19565
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "f7e8ea067d6421fbc8ef41f91d1e673cd20f08d8",
  "homepage": "https://github.com/apollographql/apollo-server#readme",
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    }
  ],
  "name": "apollo-server-caching",
  "optionalDependencies": {},
  "readme": "# apollo-server-caching\n\n[![npm version](https://badge.fury.io/js/apollo-server-caching.svg)](https://badge.fury.io/js/apollo-server-caching)\n[![Build Status](https://circleci.com/gh/apollographql/apollo-server.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server)\n\n## Implementing your own Cache\n\nInternally, Apollo Server uses the `KeyValueCache` interface to provide a caching store for the Data Sources. An in-memory LRU cache is used by default, and we provide connectors for [Memcached](../apollo-server-cache-memcached)/[Redis](../apollo-server-cache-redis) backends.\n\nBuilt with extensibility in mind, you can also implement your own cache to use with Apollo Server, in a way that best suits your application needs. It needs to implement the following interface that can be exported from `apollo-server-caching`:\n\n```typescript\nexport interface KeyValueCache {\n  get(key: string): Promise<string | undefined>;\n  set(key: string, value: string, options?: { ttl?: number }): Promise<void>;\n}\n```\n\n## Testing cache implementations\n\n### Test helpers\n\nYou can export and run a jest test suite from `apollo-server-caching` to test your implementation:\n\n```typescript\n// ../__tests__/YourKeyValueCache.test.ts\n\nimport YourKeyValueCache from '../src/YourKeyValueCache';\nimport { testKeyValueCache } from 'apollo-server-caching';\ntestKeyValueCache(new MemcachedCache('localhost'));\n```\n\nThe default `testKeyValueCache` helper will run all key-value store tests on the specified store, including basic `get` and `set` functionality, along with time-based expunging rules.\n\nSome key-value cache implementations may not be able to support the full suite of tests (for example, some tests might not be able to expire based on time).  For those cases, there are more granular implementations which can be used:\n\n* `testKeyValueCache_Basic`\n* `testKeyValueCache_Expiration`\n\nFor more details, consult the [source for `apollo-server-caching`](./src/__tests__/testsuite.ts).\n\n### Running tests\n\nRun tests with `jest --verbose`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-caching"
  },
  "types": "dist/index.d.ts",
  "version": "0.4.0"
}
